{"version":3,"file":"static/js/881.566a87b1.chunk.js","mappings":"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","sources":["components/Paginator/Paginator.styled.js","components/Paginator/Paginator.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 40px 0;\n  font-size: 18px;\n  .selected {\n    color: #e9e9e9;\n    background-color: #589ceb;\n    &:hover {\n      background-color: #0268dd;\n    }\n  }\n  li {\n    list-style-type: none;\n    border-radius: 7px;\n    color: #e9e9e9;\n    background-color: #0f1652;\n    &:hover {\n      background-color: #0268dd;\n      color: #e9e9e9;\n    }\n  }\n  a {\n    display: block;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n`;\n","import { StyledPaginate } from '../Paginator/Paginator.styled';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n  const handlePageClick = event => {\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        previousLabel={<IoIosArrowBack />}\n        nextLabel={<IoIosArrowForward />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        renderOnZeroPageCount={null}\n        forcePage={currentPage}\n      />\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"Movies_formTitle__GbMte\",\"wrap\":\"Movies_wrap__qvGuo\",\"movieForm\":\"Movies_movieForm__cvFvD\",\"movieInput\":\"Movies_movieInput__-ez87\",\"btn\":\"Movies_btn__TlfBQ\",\"movies\":\"Movies_movies__TE99a\",\"movieItem\":\"Movies_movieItem__U+pt+\",\"pageTitle\":\"Movies_pageTitle__Xztvt\",\"title\":\"Movies_title__MDLXB\",\"poster\":\"Movies_poster__Yc3Qb\",\"loading\":\"Movies_loading__sAADI\"};","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { searchMovie } from './../../services/api';\nimport css from './Movies.module.css';\nimport Blocks from './../../components/Loader/Loader.jsx';\nimport Paginator from '../../components/Paginator/Paginator';\nimport defaultPoster from '../../img/no-poster-available.jpg';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n  const searchQuery = searchParams.get('query');\n\n  const [totalPages, settotalPages] = useState(0);\n  const location = useLocation();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const { query } = params;\n\n  const [inputValue, setInputValue] = useState(query || '');\n\n  useEffect(() => {\n    if (!query) return;\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { data } = await searchMovie(query, page);\n        setData(data.results);\n        setLoading(false);\n        settotalPages(data.total_pages);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, [query, page]);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const searchQuery = e.target.elements.search.value.trim();\n    if (searchQuery === '') {\n      e.target.reset();\n      return;\n    }\n    setSearchParams({ query: searchQuery, page: 1 });\n    e.target.reset();\n  };\n  return (\n    <>\n      <div className={css.wrap}>\n        <h2 className={css.formTitle}>Search movies:</h2>\n\n        <form onSubmit={handleSubmit} className={css.movieForm}>\n          <input\n            value={inputValue}\n            onChange={handleChange}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Type here\"\n            className={css.movieInput}\n          />\n          <button type=\"submit\" className={css.btn}>\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.movies}>\n        {searchQuery ? (\n          loading ? (\n            <div className={css.loading}>\n              <Blocks />\n            </div>\n          ) : data.length > 0 ? (\n            data.map(({ title, id, poster_path }) => (\n              <li key={id} className={css.movieItem}>\n                <Link\n                  state={{ from: location }}\n                  to={`/movies/${id}`}\n                  cover={poster_path}\n                >\n                  <img\n                    className={css.poster}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : defaultPoster\n                    }\n                    alt={title}\n                  />\n                  <p className={css.title}>{title}</p>\n                </Link>\n              </li>\n            ))\n          ) : (\n            <p>\n              No movies with this title were found. Try entering another title\n            </p>\n          )\n        ) : (\n          <p className={css.descr}></p>\n        )}\n      </ul>\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: '568ed8e1a51d85607165170baf4e3b10', language: 'en-US' },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["StyledPaginate","styled","ReactPaginate","totalPages","setSearchParams","params","currentPage","breakLabel","previousLabel","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","useState","data","setData","loading","setLoading","useSearchParams","query","searchParams","searchQuery","get","settotalPages","location","useLocation","useMemo","Object","fromEntries","Number","inputValue","setInputValue","useEffect","getData","searchMovie","results","total_pages","console","log","className","css","onSubmit","e","preventDefault","target","elements","search","value","trim","reset","onChange","name","type","placeholder","length","map","title","id","poster_path","state","from","to","cover","src","defaultPoster","alt","Paginator","instance","axios","baseURL","api_key","language","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews","queryString"],"sourceRoot":""}