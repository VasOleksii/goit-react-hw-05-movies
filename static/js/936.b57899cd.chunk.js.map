{"version":3,"file":"static/js/936.b57899cd.chunk.js","mappings":"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","sources":["components/Paginator/Paginator.styled.js","components/Paginator/Paginator.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 40px 0;\n  font-size: 18px;\n  .selected {\n    color: #e9e9e9;\n    background-color: #589ceb;\n    &:hover {\n      background-color: #0268dd;\n    }\n  }\n  li {\n    list-style-type: none;\n    border-radius: 7px;\n    color: #e9e9e9;\n    background-color: #0f1652;\n    &:hover {\n      background-color: #0268dd;\n      color: #e9e9e9;\n    }\n  }\n  a {\n    display: block;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n`;\n","import { StyledPaginate } from '../Paginator/Paginator.styled';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n  const handlePageClick = event => {\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        previousLabel={<IoIosArrowBack />}\n        nextLabel={<IoIosArrowForward />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        renderOnZeroPageCount={null}\n        forcePage={currentPage}\n      />\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Home_movies__F2dIL\",\"movieItem\":\"Home_movieItem__0rUMc\",\"pageTitle\":\"Home_pageTitle__VBpDB\",\"title\":\"Home_title__L087v\",\"poster\":\"Home_poster__GFYjc\",\"loading\":\"Home_loading__t1qT+\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getTrendingMovies } from './../../services/api';\nimport css from './Home.module.css';\nimport Blocks from './../../components/Loader/Loader.jsx';\nimport Paginator from '../../components/Paginator/Paginator';\nimport defaultPoster from '../../img/no-poster-available.jpg';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const location = useLocation();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const [totalPages, settotalPages] = useState(0);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingMovies(page);\n        setMovies(data.results);\n        settotalPages(data.total_pages);\n        setLoading(false);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [page]);\n\n  return (\n    <>\n      <h2 className={css.pageTitle}>Trending movies:</h2>\n      <ul className={css.movies}>\n        {loading ? (\n          <div className={css.loading}>\n            <Blocks />\n          </div>\n        ) : (\n          movies.map(({ title, id, poster_path }) => (\n            <li key={id} className={css.movieItem}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  className={css.poster}\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : defaultPoster\n                  }\n                  alt={title}\n                />\n                <p className={css.title}>{title}</p>\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: '568ed8e1a51d85607165170baf4e3b10', language: 'en-US' },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["StyledPaginate","styled","ReactPaginate","totalPages","setSearchParams","params","currentPage","breakLabel","previousLabel","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","useState","loading","setLoading","movies","setMovies","useSearchParams","searchParams","location","useLocation","useMemo","Object","fromEntries","Number","settotalPages","useEffect","getData","getTrendingMovies","data","results","total_pages","alert","message","className","css","map","title","id","poster_path","to","state","from","src","defaultPoster","alt","Paginator","instance","axios","baseURL","api_key","language","get","getMovieDetails","query","getMovieCast","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}